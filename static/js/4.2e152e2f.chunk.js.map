{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","item","avatar","src","nickname","to","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Texterea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAlLD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,SAAW,+B,wHCalFC,MAVf,SAAoBC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,KAAlB,UACI,qBAAKF,UAAWC,IAAEE,OAAQC,IAAI,qGAC9B,cAAC,IAAD,CAASJ,UAAWC,IAAEI,SAAUC,GAAIR,EAApC,SAA2CD,EAAMU,WCA9CC,MANf,SAAiBX,GACb,OACI,qBAAKG,UAAWC,IAAEQ,QAAlB,SAA4BZ,EAAMY,W,wCCApCC,EAAeC,YAAiB,KAkBvBC,EAJaC,YAAU,CAClCC,KAAM,wBADkBD,EAZL,SAAChB,GACpB,OAAO,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GACjDH,KAAK,iBAAiBe,YAAY,yBAEtC,8BACI,kDC2BGC,MAlCf,SAAiB1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,QAAQC,KAChC,SAAAC,GAAC,OAAK,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAiBR,GAAI8B,EAAE9B,IAAZ8B,EAAE9B,OAGvC+B,EAAmBN,EAAMO,SAASH,KAClC,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAEjC,OAO7C,OAAKF,EAAMoC,OAKP,sBAAKjC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEiC,aAAlB,SACMR,IAEN,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACI,8BACMD,IAEN,cAAC,EAAD,CAAqBf,SAjBb,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOE,yBAIlB,cAAC,IAAD,CAAU/B,GAAI,Y,+CCnBzBgC,EAA6B,SAACd,GAAD,MAAY,CACzCS,OAAQT,EAAMe,KAAKN,S,QCeRO,sBACXC,aAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKjD,MAAMoC,OAET,cAACW,EAAD,eAAeE,KAAKjD,QAFI,cAAC,IAAD,CAAUS,GAAG,eAHT,GACXyC,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG9DL,CAGbjB","file":"static/js/4.2e152e2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2kHc4\",\"dialogsItems\":\"Dialogs_dialogsItems__3occo\",\"active\":\"Dialogs_active__3SPE_\",\"messages\":\"Dialogs_messages__1ziFJ\",\"message\":\"Dialogs_message__2r7mk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__21rQY\",\"avatar\":\"DialogItem_avatar__uJdiB\",\"nickname\":\"DialogItem_nickname__ANGky\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './DialogItem.module.css';\r\n\r\nfunction DialogItem(props) {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.avatar} src=\"https://yt3.ggpht.com/a/AATXAJzVPI2I0PGAFTwf4qDsA5bpLjyjQ7Ac-kBqMQ=s900-c-k-c0xffffffff-no-rj-mo\" />\r\n            <NavLink className={s.nickname} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Texterea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Texterea} validate={[required, maxLength100]}\r\n            name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n        </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\nexport default AddMessageFormRedux;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router';\r\nimport AddMessageFormRedux from './AddMessageForm/AddMessageForm';\r\n\r\nfunction Dialogs(props) {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(\r\n        d =>  <DialogItem name={d.name} key={d.id} id={d.id} />\r\n    );\r\n\r\n    let messagesElements = state.messages.map(\r\n        m => <Message message={m.message} key={m.id} />\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/Login'} />;\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    { messagesElements }\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}